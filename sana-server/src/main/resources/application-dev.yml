############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  cookie:
    secure: false
    httpOnly: true
  token-name: Authorization # token 名称（同时也是 cookie 名称）
  timeout: 2592000  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  active-timeout: -1  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  is-concurrent: true  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-share: false  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  token-style: uuid  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  is-log: true  # 是否输出操作日志
  jwt-secret-key: sanakeyidSDWasdWsdjnusadFasdewsasdDQWedwfdasefAS # jwt秘钥
  ignore-config:
    paths:
      - /sys/captcha/getCaptcha
      - /sys/captcha/enabled
      - /sys/auth/login
      - /sys/auth/ver
      - /sys/auth/send/code
      - /upload/**
      - /v3/api-docs/**
      - /webjars/**
      - /swagger/**
      - /swagger-resources/**
      - /swagger-ui.html
      - /doc.html
      - /swagger-ui/**
      - /favicon.ico
# 文件存储
storage:
  minio:
    access-key: Y2j5CsdZqWVsyWadwssvkTYjhR
    secret-key: ro2TfKWjV07JrbuOTsadXBhT1XEq0Rqp5PGzzRQNXRY
    end-point: http://127.0.0.1:9000
    bucket-name: dev

spring:
  # 是否开启登录验证码
  captchaEnabled: true
  # 数据库连接信心
  data:
    redis:
      database: 1
      host: 127.0.0.1
      port: 6379
      password: 123456
      timeout: 6000ms  # 连接超时时长（毫秒）
      lettuce:
        pool:
          max-active: 20    # 最大活跃连接数
          max-idle: 10      # 最大空闲连接
          min-idle: 5       # 最小空闲连接
          max-wait: 5000ms  # 获取连接最大等待时间
          time-between-eviction-runs: 30000ms  # 空闲连接检查周期
      stream:
        core-pool-size: 3 #处理逻辑时线程池的核心线程数
        max-pool-size: 3  #线程池最大线程数
        queue-capacity: 500 # 队列容量，默认：500
        batch-size: 40    #批量消费数量(一次最多获取多少条消息)
        poll-timeout-seconds: 3 # Stream中没有消息时，等待时间
        streams:          # 环境运行的时候，请一定要先创建好对应的stream；
          - name: sana:stream:topic-ruleo  # 设备规则处理stream1
            group: group-rule1
          - name: sana:stream:topic-rulet  # 设备规则处理stream2
            group: group-rule2
          - name: sana:stream:topic-rulej  # 定时规则处理stream
            group: group-rulejob
  datasource:
    dynamic:
      hikari: # Hikari 连接池全局配置
        connection-timeout: 30000     # 等待连接池分配链接的最大时长（毫秒），超过这个时长还没有可用的连接则发生 SQLException，默认：30 秒
        minimum-idle: 2               # 最小空闲连接数
        maximum-pool-size: 10         # 最大连接数
        idle-timeout: 600000          # 连接超时的最大时长（毫秒），超时则被释放（retired），默认：10 分钟
        max-lifetime: 1800000         # 连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认： 30 分钟
        connection-test-query: SELECT 1
      primary: mysql
      datasource:
        mysql:
          # MySQL8
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/sana?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true
          username: root
          password: 123456
          # TDengine
        tdengine:
          #原生链接，需要配置客户端
          #driver-class-name: com.taosdata.jdbc.TSDBDriver
          #url: jdbc:TAOS://127.0.0.1:6041/sana?charset=UTF-8&locale=en_US.UTF-8&timezone=UTC-8
          #REST 连接
          driver-class-name: com.taosdata.jdbc.rs.RestfulDriver
          url: jdbc:TAOS-RS://127.0.0.1:6041/lana?charset=UTF-8&locale=en_US.UTF-8&timezone=UTC-8
          username: root
          password: 123456


# mqtt
mqtt:
  mqtt-message:                # 服务端配置
    core-size:  2              #  线程池核心线程数
    queue-capacity: 500        # 队列容量，默认：500
  server:
    enabled: true               # 是否开启服务端，默认：true
    ip: 0.0.0.0            # 服务端 ip 默认为0.0.0.0,
    port: 1884                 # 端口，默认：1883
    name: Mqtt-broker(测试环境不开放端口)      # 名称，默认：Mica-Mqtt-Server
    heartbeat-timeout: 120000   # 心跳超时，单位毫秒，默认: 1000 * 120
    read-buffer-size: 8KB       # 接收数据的 buffer size，默认：8k
    max-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M
    auth:
      enable: true              # 是否开启 mqtt 认证
      username: root            # mqtt 认证用户名
      password: 123456           # mqtt 认证密码
    debug: false                # 如果开启 prometheus 指标收集建议关闭
    stat-enable: false          # 开启指标收集，debug 和 prometheus 开启时需要打开，默认开启，关闭节省内存
    proxy-protocol-enable: false   # 代理协议支持，nginx 可开启 tcp proxy_protocol on; 时转发源 ip 信息。2.4.1 版本开始支持
    web-port: 8084             # http、websocket 端口，默认：8083
    websocket-enable: true      # 是否开启 websocket，默认： true
    http-enable: true           # 是否开启 http api，默认： false
    http-basic-auth:
      enable: true              # 是否开启 http basic auth，默认： false
      username: root            # http basic auth 用户名
      password: 123456          # http basic auth 密码
    ssl:                        # mqtt tcp ssl 认证
      enabled: false            # 是否开启 ssl 认证，2.1.0 开始支持双向认证
      keystore-path:            # 必须参数：ssl keystore 目录，支持 classpath:/ 路径。
      keystore-pass:            # 必选参数：ssl keystore 密码
      truststore-path:          # 可选参数：ssl 双向认证 truststore 目录，支持 classpath:/ 路径。
      truststore-pass:          # 可选参数：ssl 双向认证 truststore 密码
      client-auth: none         # 是否需要客户端认证（双向认证），默认：NONE（不需要），REQUIRE（需要）
    linkType: 0                 # 连接类型，暂无用处，后续预留
